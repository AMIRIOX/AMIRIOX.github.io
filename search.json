[{"title":"WSLconfig","url":"/2020/08/07/WSLconfig/","content":"# Windows 10 1909下安装WSL(Windows子系统)以及使用方式\n\n> 无特殊说明, 本文WSL指WSL1而不是WSL2\n\n## 本机是Windows的开发者们, 经常面临着一些问题\n\n* 工作原因 我需要使用Linux的某些发行版\n* 但虚拟机太耗计算资源(不装图形界面可能会好一点)\n* 双系统过程繁琐 来回转换不方便\n\n## WSL的优点是\n\n* WSL(Windows Subsystem for Linux)\n* 比起虚拟机 实现更加底层, 性能有很大提升\n* 占用系统资源极少(CPU, RAM和磁盘空间等)\n* 与Windows共享文件系统(mount挂载), 不同的是 WSL甚至可以运行exe文件(PE格式)\n\n## 如何安装\n\n### 启用WSL\n\n> warning: 可能需要重启你的设备\n\n**用管理员身份**打开powershell, 执行\n\n``` powershell\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n```\n\n### 选择一个发行版\n\n注意 这一步**有两个方式**\n\n1. 在Microsoft Store中搜索Linux,安装自己想要的发行版,\n\n直接获取即可\n\n但**默认安装在C盘**, 迁移需要 `mklink` 并且移动AppData/Local下的一些文件夹\n繁琐且不安全\n\n![aR6iM8.png](https://s1.ax1x.com/2020/08/07/aR6iM8.png)\n\n2. 手动下载安装 (推荐)\n\n没有很麻烦 主要的痛点是网络环境不好 下载时间太长\n如果你只需要使用Ubuntu 18.04, 可以下载这个, 速度会快一点\n... 好的 我进不去OneDrive网页版了, 卒\n你可以在[这里](https://wiki.ubuntu.com/WSL), 找到\n\n![aR6wQK.png](https://s1.ax1x.com/2020/08/07/aR6wQK.png)\n\nUbuntu WSL的各个版本, 如果需要其他版本, 可以在\n[微软官方WSL文档](https://docs.microsoft.com/en-us/windows/wsl/install-manual#downloading-distros)\n中下载自己需要的发行版.\n\n后缀名为 `.appx` .\n\n### 安装\n\n管理员的powershell中, 输入:\n(开头的 `>` 和 `$` 是命令提示符, 不需要输入)\n\n``` powershell\n> New-Item A:\\Ubuntu -ItemType Directory # 创建文件夹\n> Set-Location A:\\Ubuntu # 跳转到新创建的文件夹\n```\n\n当然你可以用任何你喜欢的方式新建文件夹, 甚至使用git-bash\n\n``` bash\n$ mkdir Ubuntu\n$ cd Ubuntu\n```\n\n将下载好的 `.appx` 文件(假设名为 `Ubuntu .appx` )放入刚才创建的文件夹, PS执行\n\n``` powershell\nRename-Item .\\Ubuntu.appx Ubuntu.zip\nExpand-Archive .\\Ubuntu.zip -Verbose\n```\n\n这将重命名Ubuntu.appx为Ubuntu.zip并解压到/Ubuntu/Ubuntu目录\n\n然后直接执行Ubuntu/Ubuntu/ubuntu1804.exe(其他发行版同理)\n\n``` powershell\n> cd Ubuntu\n> .\\ubuntu1804.exe\n```\n\n此时应该显示安装log:\n\n``` \nInstalling, this may take a few minutes...\nPlease create a default UNIX user account. The username does not need to match your Windows username.\nFor more information visit: https://aka.ms/wslusers\nEnter new UNIX username: <这里输入你的Linux用户名>\nEnter new UNIX password: <密码,注意密码不回显,你输入是看不到的>\nRetype new UNIX password: <重复密码>\npasswd: password updated successfully\nInstallation successful!\n```\n\n### 启动\n\n直接执行或打开ubuntu1804.exe即可, \n或者直接在cmd/powershell中输入 `bash` (这个会和git冲突)   \n如果想修改输入bash默认启动的WSL, 可以 `wslconfig /list /all` 查看已安装的WSL  \n然后使用 `wslconfig /setdefault <WSL Name>` 来设置(WSL Name是WSL名字)\n\n## 使用\n\n### 安装 oh my zsh 美化终端\n\n首先查看是否有zsh\n```bash\n$ cat /etc/shells\n```\n如果没有`/bin/zsh`出现,则执行\n```bash\n$ sudo apt install zsh\n```\n然后就可以切换到zsh了:\n```bash\n$ chsh -s /bin/zsh\n```\n说句闲话 zsh并不是特别好看,所以我们要安装oh my zsh   \n由于一些不宜公开讨论的问题, 国内访问一些资源有些困难,       \nwget或curl的方式失败几率极大,     \n所以可以在WSL终端中, 输入:   \n\n``` bash\n$ cd ~\n$ vim install.sh\n```\n\n然后按下i键(vim的insert模式), 输入\n\n``` bash\n#!/bin/sh\n#\n# This script should be run via curl:\n#   sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# or wget:\n#   sh -c \"$(wget -qO- https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n#\n# As an alternative, you can first download the install script and run it afterwards:\n#   wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh\n#   sh install.sh\n#\n# You can tweak the install behavior by setting variables when running the script. For\n# example, to change the path to the Oh My Zsh repository:\n#   ZSH=~/.zsh sh install.sh\n#\n# Respects the following environment variables:\n#   ZSH     - path to the Oh My Zsh repository folder (default: $HOME/.oh-my-zsh)\n#   REPO    - name of the GitHub repo to install from (default: ohmyzsh/ohmyzsh)\n#   REMOTE  - full remote URL of the git repo to install (default: GitHub via HTTPS)\n#   BRANCH  - branch to check out immediately after install (default: master)\n#\n# Other options:\n#   CHSH       - 'no' means the installer will not change the default shell (default: yes)\n#   RUNZSH     - 'no' means the installer will not run zsh after the install (default: yes)\n#   KEEP_ZSHRC - 'yes' means the installer will not replace an existing .zshrc (default: no)\n#\n# You can also pass some arguments to the install script to set some these options:\n#   --skip-chsh: has the same behavior as setting CHSH to 'no'\n#   --unattended: sets both CHSH and RUNZSH to 'no'\n#   --keep-zshrc: sets KEEP_ZSHRC to 'yes'\n# For example:\n#   sh install.sh --unattended\n#\nset -e\n\n# Default settings\nZSH=${ZSH:-~/.oh-my-zsh}\nREPO=${REPO:-ohmyzsh/ohmyzsh}\nREMOTE=${REMOTE:-https://github.com/${REPO}.git}\nBRANCH=${BRANCH:-master}\n\n# Other options\nCHSH=${CHSH:-yes}\nRUNZSH=${RUNZSH:-yes}\nKEEP_ZSHRC=${KEEP_ZSHRC:-no}\n\ncommand_exists() {\n\t\tcommand -v \"$@\" >/dev/null 2>&1\n\t}\n\n\terror() {\n\t\t\techo ${RED}\"Error: $@\"${RESET} >&2\n\t\t}\n\n\t\tsetup_color() {\n\t\t\t\t# Only use colors if connected to a terminal\n\t\t\t\t\tif [ -t 1 ]; then\n\t\t\t\t\t\t\t\tRED=$(printf '\\033[31m')\n\t\t\t\t\t\t\t\t\t\tGREEN=$(printf '\\033[32m')\n\t\t\t\t\t\t\t\t\t\t\t\tYELLOW=$(printf '\\033[33m')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tBLUE=$(printf '\\033[34m')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBOLD=$(printf '\\033[1m')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRESET=$(printf '\\033[m')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRED=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGREEN=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tYELLOW=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBLUE=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBOLD=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRESET=\"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetup_ohmyzsh() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Prevent the cloned repository from having insecure permissions. Failing to do\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# so causes compinit() calls to fail with \"command not found: compdef\" errors\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# for users with insecure umasks (e.g., \"002\", allowing group writability). Note\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# that this will be ignored under Cygwin by default, as Windows ACLs take\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# precedence over umasks except for filesystems mounted with option \"noacl\".\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tumask g-w,o-w\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${BLUE}Cloning Oh My Zsh...${RESET}\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcommand_exists git || {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"git is not installed\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ \"$OSTYPE\" = cygwin ] && git --version | grep -q msysgit; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"Windows/MSYS Git is not supported on Cygwin\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"Make sure the Cygwin git package is installed and is first on the \\$PATH\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgit clone -c core.eol=lf -c core.autocrlf=false \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-c fsck.zeroPaddedFilemode=ignore \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-c fetch.fsck.zeroPaddedFilemode=ignore \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t-c receive.fsck.zeroPaddedFilemode=ignore \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t--depth=1 --branch \"$BRANCH\" \"$REMOTE\" \"$ZSH\" || {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"git clone of oh-my-zsh repo failed\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetup_zshrc() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Keep most recent old .zshrc at .zshrc.pre-oh-my-zsh, and older ones\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# with datestamp of installation that moved them aside, so we never actually\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# destroy a user's original zshrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${BLUE}Looking for an existing zsh config...${RESET}\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Must use this exact name so uninstall.sh can find it\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tOLD_ZSHRC=~/.zshrc.pre-oh-my-zsh\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ -f ~/.zshrc ] || [ -h ~/.zshrc ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Skip this if the user doesn't want to replace an existing .zshrc\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ $KEEP_ZSHRC = yes ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${YELLOW}Found ~/.zshrc.${RESET} ${GREEN}Keeping...${RESET}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ -e \"$OLD_ZSHRC\" ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tOLD_OLD_ZSHRC=\"${OLD_ZSHRC}-$(date +%Y-%m-%d_%H-%M-%S)\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ -e \"$OLD_OLD_ZSHRC\" ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"$OLD_OLD_ZSHRC exists. Can't back up ${OLD_ZSHRC}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"re-run the installer again in a couple of seconds\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmv \"$OLD_ZSHRC\" \"${OLD_OLD_ZSHRC}\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${YELLOW}Found old ~/.zshrc.pre-oh-my-zsh.\" \\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"${GREEN}Backing up to ${OLD_OLD_ZSHRC}${RESET}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${YELLOW}Found ~/.zshrc.${RESET} ${GREEN}Backing up to ${OLD_ZSHRC}${RESET}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmv ~/.zshrc \"$OLD_ZSHRC\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${GREEN}Using the Oh My Zsh template file and adding it to ~/.zshrc.${RESET}\"\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsed \"/^export ZSH=/ c\\\\\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texport ZSH=\\\"$ZSH\\\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\" \"$ZSH/templates/zshrc.zsh-template\" > ~/.zshrc-omztemp\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmv -f ~/.zshrc-omztemp ~/.zshrc\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetup_shell() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Skip setup if the user wants or stdin is closed (not running interactively).\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ $CHSH = no ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# If this user's login shell is already \"zsh\", do not attempt to switch.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ \"$(basename \"$SHELL\")\" = \"zsh\" ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# If this platform doesn't provide a \"chsh\" command, bail out.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ! command_exists chsh; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcat <<-EOF\n\t\t\tI can't change your shell automatically because this system does not have chsh.\n\t\t\t${BLUE}Please manually change your default shell to zsh${RESET}\n\t\tEOF\n\t\t\t\treturn\n\t\t\t\t\tfi\n\n\t\t\t\t\t\techo \"${BLUE}Time to change your default shell to zsh:${RESET}\"\n\n\t\t\t\t\t\t\t# Prompt for user choice on changing the default login shell\n\t\t\t\t\t\t\t\tprintf \"${YELLOW}Do you want to change your default shell to zsh? [Y/n]${RESET} \"\n\t\t\t\t\t\t\t\t\tread opt\n\t\t\t\t\t\t\t\t\t\tcase $opt in\n\t\t\t\t\t\t\t\t\t\t\t\t\ty*|Y*|\"\") echo \"Changing the shell...\" ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tn*|N*) echo \"Shell change skipped.\"; return ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*) echo \"Invalid choice. Shell change skipped.\"; return ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tesac\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Check if we're running on Termux\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase \"$PREFIX\" in\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*com.termux*) termux=true; zsh=zsh ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*) termux=false ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tesac\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ \"$termux\" != true ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Test for the right location of the \"shells\" file\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ -f /etc/shells ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshells_file=/etc/shells\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telif [ -f /usr/share/defaults/etc/shells ]; then # Solus OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshells_file=/usr/share/defaults/etc/shells\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"could not find /etc/shells file. Change your default shell manually.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Get the path to the right zsh binary\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# 1. Use the most preceding one based on $PATH, then check that it's in the shells file\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# 2. If that fails, get a zsh path from the shells file, then check it actually exists\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ! zsh=$(which zsh) || ! grep -qx \"$zsh\" \"$shells_file\"; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ! zsh=$(grep '^/.*/zsh$' \"$shells_file\" | tail -1) || [ ! -f \"$zsh\" ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"no zsh binary found or not present in '$shells_file'\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"change your default shell manually.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# We're going to change the default shell, so back up the current one\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ -n \"$SHELL\" ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo $SHELL > ~/.shell.pre-oh-my-zsh\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgrep \"^$USER:\" /etc/passwd | awk -F: '{print $7}' > ~/.shell.pre-oh-my-zsh\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Actually change the default shell to zsh\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ! chsh -s \"$zsh\"; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror \"chsh command unsuccessful. Change your default shell manually.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texport SHELL=\"$zsh\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${GREEN}Shell successfully changed to '$zsh'.${RESET}\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmain() {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Run as unattended if stdin is closed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ ! -t 0 ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRUNZSH=no\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tCHSH=no\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t# Parse arguments\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile [ $# -gt 0 ]; do\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcase $1 in\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t--unattended) RUNZSH=no; CHSH=no ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t--skip-chsh) CHSH=no ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t--keep-zshrc) KEEP_ZSHRC=yes ;;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tesac\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshift\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdone\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetup_color\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif ! command_exists zsh; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\techo \"${YELLOW}Zsh is not installed.${RESET} Please install zsh first.\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texit 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [ -d \"$ZSH\" ]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcat <<-EOF\n\t\t\t${YELLOW}You already have Oh My Zsh installed.${RESET}\n\t\t\tYou'll need to remove '$ZSH' if you want to reinstall.\n\t\tEOF\n\t\t\t\texit 1\n\t\t\t\t\tfi\n\n\t\t\t\t\t\tsetup_ohmyzsh\n\t\t\t\t\t\t\tsetup_zshrc\n\t\t\t\t\t\t\t\tsetup_shell\n\n\t\t\t\t\t\t\t\t\tprintf \"$GREEN\"\n\t\t\t\t\t\t\t\t\t\tcat <<-'EOF'\n\t\t         __                                     __\n\t\t  ____  / /_     ____ ___  __  __   ____  _____/ /_\n\t\t / __ \\/ __ \\   / __ `__ \\/ / / /  /_  / / ___/ __ \\\n\t\t/ /_/ / / / /  / / / / / / /_/ /    / /_(__  ) / / /\n\t\t\\____/_/ /_/  /_/ /_/ /_/\\__, /    /___/____/_/ /_/\n\t\t                        /____/                       ....is now installed!\n\n\t\tPlease look over the ~/.zshrc file to select plugins, themes, and options.\n\n\t\tp.s. Follow us on https://twitter.com/ohmyzsh\n\n\t\tp.p.s. Get stickers, shirts, and coffee mugs at https://shop.planetargon.com/collections/oh-my-zsh\n\n\tEOF\n\t\tprintf \"$RESET\"\n\n\t\t\tif [ $RUNZSH = no ]; then\n\t\t\t\t\t\techo \"${YELLOW}Run zsh to try it out.${RESET}\"\n\t\t\t\t\t\t\t\texit\n\t\t\t\t\t\t\t\t\tfi\n\n\t\t\t\t\t\t\t\t\t\texec zsh -l\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tmain \"$@\"\n\n```\n然后按下`esc`键,输入`:wq`即保存并退出,然后\n```bash\n$ sudo chmod +x install.sh # 取得执行权限\n$ ./install.sh             # 脚本安装\n```\n然后就会自动clone仓库并安装oh my zsh   \n我觉得默认主题不错的, 但你也可以切换自己喜欢的主题\n```bash\nvim ~./zshrc\n```\n在其中ZSH_THEME=\"\"的双引号中输入你想安装的主题名,\n主题名很多博客含糊不清,这个theme名字其实就是\n```\nls ~/.oh-my-zsh/themes\n```\n中的文件名**去掉`.zsh-theme`后缀**的名字,\n推荐一个`agnoster`比较好看, 但我还是喜欢朴素点的(逃\n所以我用的默认主题\n> 关于默认主题:    \n> 在vscode终端下很多字体都会出现那个箭头错位的现象,    \n> 据说是powerline字体问题, 但我试了很多字体,   \n> Ubuntu Mono derivative Powerline虽然没有问题   \n> 但字体太小 一番摸索后发现`DejaVu Sans Mono   \n> 好看而且字体显示不出问题, 比较推荐\n\n## 关于WSL与WSL2\n- WSL支持Windows和Linux子系统的文件系统互访, 而WSL2不支持\n- WSL2对GPU等有更好的优化, 而WSL没有\n- 二者启动速度都很快 且资源占用小\n- WSL2可以与VMware或VirtualBox配合使用\n- WSL和WSL2对比: https://www.v2ex.com/t/587642"},{"title":"C1","url":"/2020/07/20/C1/","content":"# 了解Git:\n> Git是一个版本控制系统. 常用场景如下\n## 场景一:\n> 程序员A写了个功能,但写好后怎么交?直接替换文件?非也\n> 直接git merge master(下面会说)\n## 场景二:\n> 开发者A写了一个功能,然后提交到开发环境\n> 开发者B发现开发者A代码里的一个bug,修好后提交到开发环境\n> 开发者B修bug时写出了一个bug,只好返回原来版本(即下面要说的checkout)修bug\n\n总之, git是一个在不断更新产品/修复bug过程中倒腾版本的东西\n当然,也可以和github.com或gitee.com等代码托管平台(远程仓库)配合\n\n下面开始介绍\n\n# 安装\n点击[https://git-scm.com/downloads]( https://git-scm.com/downloads ),\n选择Download下面的Windows(当然你也可以选你对应的操作系统)\n然后下载后正常安装,\n并将`{Git安装目录}\\bin`和`{Git安装目录}\\mingw64\\libexec\\git-core`添加到path环境变量\n![YwMPmt.png](https://s1.ax1x.com/2020/05/13/YwMPmt.png)\n然后打开cmd或git bash输入`git`,如果出现一大堆帮助信息那就成功了\n\n# 概念解释\n## git工作原理\n\"分支\"是指一个项目的不同版本,一般情况下,修改bug或添加功能会创建一个新的分支\n然后合并到主分支($master$),主分支就是最稳定的版本\ngit实际上是分为三个区域, `工作区`, `暂存区` 和`版本库`\n工作区($workspace$),就是你写代码的本地文件夹\n暂存区($stage/index$),存放在`.git`文件夹下面的index文件,顾名思义呗\n版本库,存放一些各个版本,分支的项目文件,存在`.git`文件夹下 **--一般地,我们不将版本库算在工作区中**\n![Yw12jJ.png](https://s1.ax1x.com/2020/05/13/Yw12jJ.png)\n如图所示.\n\n# 开始实战\n\n新建一个文件夹,我这里新建为`helloGit`\n\n然后打开cd切到这个路径(或右键选择`git bash here`)\n\n输入以下命令($是提示符,不需要输入)\n\n```shell\n$ g++ init\n```\n\n初始化,使其成为git版本管理的项目之一\n\n**不要乱动git init生成的.git文件夹.**\n\n\n\n# 待更.先睡觉去了 qwq\n\n"},{"title":"C002-右键菜单和快捷键","url":"/2020/07/20/C002-右键菜单和快捷键/","content":"# 概要\n主要借助右键菜单和快捷键讲解一下`package.json`. ~~没错我就是标题党~~\n\n# 添加右键菜单和快捷键\n我们在`package.json`中找到`contributes`,\n然后可以看到\n```json\n \"contributes\": {\n     \"commands\": [\n            {\n                \"command\": \"extension.sayHello\",\n                \"title\": \"Hello World\"\n            }\n     ]\n }\n```\n我们在`command`数组的后面加一个`,`(英文逗号)\n然后写如下代码\n```json\n \"contributes\": {\n     \"commands\": [\n            {\n                \"command\": \"extension.sayHello\",\n                \"title\": \"Hello World\"\n            }\n     ],\n      //这个keybindings数组就是快捷键绑定了\n     \"keybindings\": [\n          {\n               \"command\": \"name.helloWorld\", //要绑定的命令名字\n               \"key\": \"ctrl+f10\",    //按下ctrl f10时执行name.helloworl命令\n               \"mac\": \"cmd+f10\",   //mac下快捷键 (mac os x的ctrl键叫cmd键\n               \"when\": \"editorFocus\"   //什么时候,editor focus 即编辑器获得焦点 也就是光标在编辑器上\n          }\n     ],\n     //菜单\n     \"menus\": { //注意这里不是[而是{了,表示不是数组而是对象\n           \"editor/context\":[\n                {\n                    \"when\": \"editorFocus\",                  //同上\n                    \"command\": \"name.helloWorld\",        //右键菜单命令\n                    \"group\": \"navigation\"                   //显示位置,\"navigation\"是最上面\n                }\n            ]\n      }\n }\n```\n**请手写一遍而不是复制粘贴,加深印象**\n可以照着写,单词不用死记硬背,vscode有自动补全和提示.\n另外 标准json不支持注释,写的时候不要加上注释.\n![Y1j5zF.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/Y1j5zF.png)\n这样我们就能看到右键菜单了,点击hello world命令或ctrl+f10\n![Y1vpsH.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/Y1vpsH.png)\ngreat.\n\n# packag.json详细分析\n```json\n{\n\t\"name\": \"name\",                    //扩展的名字  全部小写 没有空格\n\t\"displayName\": \"name\",             //\"友好的\"显示名称,显示在vscode应用市场 可以中文\n\t\"description\": \"描述 可以中文\",     //插件描述 建议写的丰富一点 可以中文\n        \"keywords\": [\"vscode\", \"plugin\", \"helloworld\"],   //自动生成没有 手动添加  关键词,用于在vscode应用市场搜索\n\t\"version\": \"0.1.1\",                            //版本号\n         \"publisher\": \"airx\",                           //发布者 请与发布者一致\n\t\"engines\": {                                     //支持的最低vscode版本\n\t\t\"vscode\": \"^1.45.0\"\n\t},\n\t\"categories\": [                      //应用分类,稍后详解\n\t\t\"Other\"\n\t],\n        \"icon\": \"images/icon.png\",           //应用图标\n\t\"activationEvents\": [                    //表示插件会被哪些命令激活\n\t\t\"onCommand:name.helloWorld\"\n\t],\n\t\"main\": \"./extension.js\",       //入口\n         //主要的插件配置项 据说叫贡献点 是个鬼畜名字\n\t\"contributes\": {\n                 //插件设置,也就是在vscode设置中你的插件的设置项\n                \"configuration\": {\n                        \"type\": \"object\",\n\t\t\t     // 设置页面的配置项标题\n                          \"title\": \"helloworld插件设置\",\n                           \"properties\": {\n                                   \"name.name\": {\n                                        \"type\": \"string\",     //数据类型,string即字符串\n                                        \"default\": \"NoName\",   //默认是什么\n                                        \"description\": \"写你的名字\"   //描述\n                                    },\n                                     \"name.isYoungLady \": {   //是小姐姐吗 (大雾\n                                         \"type\": \"boolean\",         //数据类型: boolean,布尔值(真/假,对/错)\n                                         \"default\": true,       //默认是小姐姐 (大雾  为真(true),假则是false\n                                         \"description\": \"是小姐姐吗\"\n                                    }\n                           }\n                  },          \n                 //命令描述\n\t\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"name.helloWorld\",\n\t\t\t\t\"title\": \"Hello World\"\n\t\t\t}\n\t\t],\n                  //之前说过了\n\t\t\"keybindings\": [\n\t\t\t{\n\t\t\t\t\"command\": \"name.helloWorld\",\n\t\t\t\t\"key\": \"ctrl+f10\",\n\t\t\t\t\"mac\": \"cmd+f10\",\n\t\t\t\t\"when\": \"editorFocus\"\n\t\t\t}\n\t\t],\n                 //说过\n\t\t\"menus\": {\n\t\t\t\"editor/context\": [     //这里一会会详细讲一下\n\t\t\t\t{\n\t\t\t\t\t\"when\": \"editorFocus\",\n\t\t\t\t\t\"command\": \"name.helloWorld\",\n\t\t\t\t\t\"group\": \"navigation\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n        \"editor/title\": [      //编辑器右上角图标/文字\n                {\n                    \"when\": \"editorFocus && resourceLangId == javascript\",  //当编辑器具有焦点,打开文件为js文件时\n                    \"command\": \"name.helloWorld\",  //显示命令name.helloworld (在右键菜单中)\n                    \"group\": \"navigation@2\"          //位置在最上层分组的第2个\n                }\n        ],\n\n\t\t\t// 编辑器标题右键菜单\n        \"editor/title/context\": [\n                {\n                    \"when\": \"resourceLangId == javascript\",\n                    \"command\": \"extension.demo.testMenuShow\",\n                    \"group\": \"navigation\"\n                }\n        ],\n             //左边栏文件管理右键菜单\n            \"explorer/context\": [\n                {  //该咋写咋写\n                    \"command\": \"name.helloWorld\",\n                    \"group\": \"navigation\"\n                }\n            ]\n        },\n         // activitybar图标，就是最左边那个栏的几个图标\n        \"viewsContainers\": {\n            \"activitybar\": [\n                {\n                    \"id\": \"nameid\",            //id\n                    \"title\": \"标题\",            //标题\n                    \"icon\": \"images/zc_icon.svg\"  //icon (图标,推荐svg)\n                }\n            ]\n        },\n           //暂时忽略\n\t\"scripts\": {\n\t\t\"lint\": \"eslint .\",\n\t\t\"pretest\": \"npm run lint\",\n\t\t\"test\": \"node ./test/runTest.js\"\n\t},\n         //开发依赖: bscode eslint等\n\t\"devDependencies\": {\n\t\t\"@types/vscode\": \"^1.45.0\",\n\t\t\"@types/glob\": \"^7.1.1\",\n\t\t\"@types/mocha\": \"^7.0.2\",\n\t\t\"@types/node\": \"^13.11.0\",\n\t\t\"eslint\": \"^6.8.0\",\n\t\t\"glob\": \"^7.1.6\",\n\t\t\"mocha\": \"^7.1.2\",\n\t\t\"typescript\": \"^3.8.3\",\n\t\t\"vscode-test\": \"^1.3.0\"\n\t}\n}\n```\n![Y3pIbQ.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/Y3pIbQ.png)\n![Y39aIs.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/Y39aIs.png)\n\n# 待更"},{"title":"C001-第一个helloworld插件","url":"/2020/07/20/C001-第一个helloworld插件/","content":"开新坑了,`VSCode: 扩展开发攻略`系列主要介绍如何从零开始(**不需要Js/TS基础**)开发一个VSCode插件\n\n# 序: 写在前面的废话\n由于~~英语不好~~谷歌翻译后的[官方文档]( https://code.visualstudio.com/api ) 很迷惑,我就打算自己简单翻翻看 翻一下 顺便加上一些注解\n\n需要注意的一点是 有些东西你别理解 先能复现再说 因为有些Js语法你没学肯定看不懂\n\n放心,这个系列一定会咕咕咕的,~~估计十年都写不好~~\n\n开始吧! (等帖子多了我会专门搞出来一个帖子收集起来)\n\n# 概览\n我们先了解下vscode插件开发的流程.\nVSCode是Chromium内核,Electron+TypeScript编写的,~~底层有些可以瞎改的CSS~~\n**VSCode插件开发并不难,熟悉API之后很简单**\nvscode插件开发时,重要的就是两个文件`package.json`和`extension.js`文件\n一个用来描述有什么,一个用来告诉干什么\n> 注: 虽然我还是比较喜欢TypeScript,但这里我们还是使用Js演示 ~~毕竟TS还不火~~\n\n# 环境: 工欲善其事,必先利其器\n## Node.Js : 使用npm并换源(cnpm)\n首先你需要一个node.js,下好了node.js才能使用`npm`命令\n进入[https://nodejs.org/zh-cn/]( https://nodejs.org/zh-cn/ )下载npm(推荐LTS版)\n然后你可以换源(换源的目的是为了提升部署速度,~~我知道你node.js下载了快半小时了~~)\n打开cmd,输入\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n这样,就可以换淘宝的镜像源了 ~~淘宝真是啥都有~~\n然后下面的操作,就可以直接使用`cnpm`而不是`npm`了(速度明显提升)\n\n## 官方VSCode插件生成环境\n```\ncnpm install -g yo generator-code\n```\n> 注意,不要把`cnpm`打成`cnpm` ! ! ! 别笑,真就有人(比如我)犯了这样的低级错误\n\n然后新建一个目录,在cmd中使用`cd+新建的目录路径`进入这个目录\n这个目录将会是你的插件的工作区\n```\nd:\ncd D:\\VSCode_Ext\\AirxWorld\\\n```\n然后执行\n```\nyo code\n```\n下面的操作类似这样\n中间有些耗时较长的地方我暂停了下GIF,不影响实际操作\n![YlTHgI.gif](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/YlTHgI.gif)\n然后\n```\ncd name\ncode .\n```\n(这里的name就是你`? What's the identifier of your extension? name`这里输入的名字)\n然后cmd就可以关掉了,你发现你惊喜的进入了VSCode\n![Yl7K2R.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/Yl7K2R.png)\n(背景图片来自WLOP) (忽略我打开的那个json文件)\n\n# 开始征程: 第一个HelloWorld插件\n##熟悉文件\n\n左侧文件资源管理器已经能看到`package.json`和`extension.js`这两个文件了,qwq\n这两个文件就是官方那个轮子生成的文件\n我们先熟悉一下这个package.json文件\n```json\n{\n\t\"name\": \"name\",             //插件名\n\t\"displayName\": \"name\",      //显示名\n\t\"description\": \"描述 可以中文\",  //描述 对应你在命令行cmd输入的描述\n\t\"version\": \"0.0.1\",         //版本号  注: 以上在vscode插件市场可见\n\t\"engines\": {\n\t\t\"vscode\": \"^1.45.0\"\n\t},\n\t\"categories\": [\n\t\t\"Other\"\n\t],\n        //扩展被激活时的事件(也就是干的事 有基础的同学可以理解为一个函数)\n\t\"activationEvents\": [\n\t\t\"onCommand:name.helloWorld\"\n\t],\n        //入口文件\n\t\"main\": \"./extension.js\",\n        //插件差不多所有的东西到要在这改,主要是一些命令的描述\n\t\"contributes\": {\n\t\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"name.helloWorld\",\n\t\t\t\t\"title\": \"Hello World\"\n\t\t\t}\n\t\t]\n\t},\n\t\"scripts\": {\n\t\t\"lint\": \"eslint .\",\n\t\t\"pretest\": \"npm run lint\",\n\t\t\"test\": \"node ./test/runTest.js\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@types/vscode\": \"^1.45.0\",\n\t\t\"@types/glob\": \"^7.1.1\",\n\t\t\"@types/mocha\": \"^7.0.2\",\n\t\t\"@types/node\": \"^13.11.0\",\n\t\t\"eslint\": \"^6.8.0\",\n\t\t\"glob\": \"^7.1.6\",\n\t\t\"mocha\": \"^7.1.2\",\n\t\t\"typescript\": \"^3.8.3\",\n\t\t\"vscode-test\": \"^1.3.0\"\n\t}\n}\n\n```\n没注释的地方可以忽略掉\n\n然后我们再熟悉下`extension.js`\n```\n// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nconst vscode = require('vscode');\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\n\n/**\n * @param {vscode.ExtensionContext} context\n */\n//插件被激活时执行这个\nfunction activate(context) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"name\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with  registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('name.helloWorld', function () {\n\t\t// The code you place here will be executed every time your command is executed\n\n\t\t// Display a message box to the user\n\t\tvscode.window.showInformationMessage('Hello World from name!');\n\t});\n\n\tcontext.subscriptions.push(disposable);\n}\nexports.activate = activate;\n\n// this method is called when your extension is deactivated\n//被释放时激活这个(上面那句英文也是这个意思,是自己生成的不关我事 ( ( (\nfunction deactivate() {}\n\nmodule.exports = {\n\tactivate,\n\tdeactivate\n}\n\n```\n## 文件分析\n这两个自己生成的文件已经带有了输出hello world提示信息的功能,我们来分析下他是如何实现的\n`package.json`节选:\n```\n\"contributes\": {\n\t\t\"commands\": [\n\t\t\t{\n\t\t\t\t\"command\": \"name.helloWorld\",\n\t\t\t\t\"title\": \"Hello World\"\n\t\t\t}\n\t\t]\n\t},\n```\ncommands的意思是\"命令\",也就是说,以后要执行的命令都要在这**注册**(即进行描述)\n了解json格式的同学也能发现commands**其实是一个json数组**,包含很多个json对象,不理解没关系\n其中内部\"command\"是命令的名字,name.helloworld也就是这个命令的名字,可以理解为身份证,\n比如以后要用到这个命令就要用这个名字叫他\n> 一个人呼喊另一个人: 张三!\n> 人群中一堆叫张三的走了过来: 咋啦?\n> 于是他喊: 身份证号是888888888888888888的人过来一下!\n> 于是他要的张三就来了\n\n这里的888888888888888888就可以理解为name.helloworld\n> 注意,这里name不是固定的,而是我们这个项目的名称\n\ntitle的意思是标题,顾名思义,也就是标题\n然后我们看看`extension.js`节选\n```javascript\nfunction activate(context) {\n\tlet disposable = vscode.commands.registerCommand('name.helloWorld', function () {\n\t\tvscode.window.showInformationMessage('Hello World from name!');\n\t});\n\tcontext.subscriptions.push(disposable);\n}\n```\nfunction中文意思函数 可以理解为一长串清单 告诉某个对象要做什么\n我们看代码里有这么一句context.subscriptions.push(disposable);\n> context  n. 环境；上下文；来龙去脉\n\n前面不看 不要理解 直接从push开始\n> push  vt. 推动，增加；对…施加压力，逼迫；按；说服; vi. 推进；增加；努力争取; n. 推，决心\n\n你可以形象一点理解: 把一个函数\"扔\"进一个地方 由别人去执行它\n就好像\n> 你找了一张纸,写了一些任务,\"给我端茶,倒水\",然后把这张纸\"扔\"到你家机器人的脑子里\n> 然后你机器人帮你干活去了,依据是这张纸\n\n`let disposable`什么意思呢?let\"让,你可以理解为 让\"disposable\"(一个名字)这个东西出现(实际上是声明了一个变量)\n后面`=`是赋值的意思,是把一个东西的值给另一个东西,比如,`a=3`就是把3值给a\n既然是赋值,那为什么后面没有数字却有一串英文呢?\n实际上可以这样理解,你有一个神奇的箱子,你往里放进去一个面团,他就会吐出一个面包 ~~不就是面包机~~\n你可以把函数理解为这个神奇的箱子,参数理解为面团(你放进去的东西),**返回值**理解为面包(吐出来的东西)\n> 当然,有的函数不会\"吐东西\",甚至也不接收东西\n\n```\nvscode.commands.registerCommand('name.helloWorld', function () {\n\t\tvscode.window.showInformationMessage('Hello World from name!');\n\t});\n```\n这段代码就是执行一个函数,函数名字(面包机的型号)`registerCommand`, 参数是'name.helloWorld'这个字符串和另一个函数(Js中字符串不是`\"`而是`'`) 参数是什么?就是上面说的你放进面包机的东西\n返回结果是`Disposable对象`,至于对象,你暂时理解成你对象好了,你对象是一个人这个类的个体\n~~如果你没有对象的话,赶紧去找啊,还学什么学啊(大雾~~\n> 小提示: 实际上,`vscode.commands.registerCommand()就是一个API(Application Programming Interface,应用程序接口,也就是那个面包机的入口,用于注册命令,不理解没关系\n\n有时候,您可能看到这样的写法\n```\ncontext.subscriptions.push(vscode.commands.registerCommand('name.helloWorld', () => {\n    //......\n}));\n```\n实际上这里它直接把值\"扔\"了进去,而没有用\"纸\"记下来\n第二,它使用了() => {...}这样的写法,实际上叫一个`Lambda`表达式,暂时忽略即可\n感兴趣可以自行百度/Bing/Google\n\n而函数内部呢,也是一个API,这个API`vscode.window.showInformationMessage()`用于输出一句调试信息\n也很好理解,vscode就是vscode,window是窗口,show information message也就是显示 信息 消息\n而括号中的'Hello World from name!'就是一个字符串,表示你要输出的信息,可以自己改\n\n这样就分析完了,如何测试一下是否可以呢?\n按`f5`,在你键盘的第一行,不算esc键的第五个按键\n可以看到它弹出来了一个新窗口\n按下Ctrl+Shift+P,也就是打开VSCode的命令面板\n![YlOvV0.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/YlOvV0.png)\n(注意看上图上方)\n输入hello,就能看到我们的helloworld命令了(title就是Hello World)\n回车选择这个命令\n![YlXFM9.png](../../../../%60warming%60%E5%8D%B7%E4%B8%80/%E4%B8%8A/2020_2/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/images/YlXFM9.png)\n(那个登录成功是我装的另一个插件`vscode-luogu`显示的,与本插件无关)\n就能看到我们的输出信息了,即vscode.window.showInformationMessage()括号里的字符串(参数)\n\n这样,第一个Hello World就说完了,是不是很容易?\n剩下的 以后再说吧 不会咕的 至少我也会把右键菜单命令和快捷键说完吧\n掰掰~ 下期再见 ~"},{"title":"Hello World in hexo blog","url":"/2020/07/20/Hello-World-in-hexo-blog/","content":"# Title test\n## sub title test\n---\n* list test\n* list test\n* list test\n\n1. sorted list test\n1. sorted...\n1. sorted...\n\n```rust\nfn main() { println!(\"hello hexo\"); }\n//code test\n```\n\n> reference test\nnext ref\nnext...\n\ntext test\n\n**bold text**\n\n*ixxxx text*\n\n~~deleted text test~~\n\n---\n# end\n"},{"title":"Hello World","url":"/2020/07/20/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]